const e=JSON.parse(`{"key":"v-34c5e7f6","path":"/%E6%AF%8F%E6%97%A5%E6%82%A6%E8%AF%BB/2024-01-30.html","title":"2024-01-30","lang":"zh-CN","frontmatter":{"order":-20240130,"icon":"read","date":"2024-01-30T00:00:00.000Z","article":false,"category":["每日悦读"],"description":"2024-01-30 鸟窝 从慢速到SIMD: 一个Go优化的故事 01:24:20 Mohuishou'sBlog 如何实现支持多集群的 Kubernetes Operator? 03:29:09 第三方应用如何调用我们 kubebuilder 生成的自定义资源? 03:29:09 Kubernetes 简明教程 03:29:09 k8s job 为何迟迟不能结束？ 03:29:09 Go 工程化(十一) 如何优雅的写出 repo 层代码 03:29:09 Go 工程化(十) 如何在整洁架构中使用事务? 03:29:09 给博客添加章节目录 03:29:09 使用 Notion Database 管理静态博客文章 03:29:09 一个普通 Go 开发的三年 03:29:09 4. localhost 就一定是 localhost 么? 03:29:09 Go可用性(七) 总结: 一张图串联可用性知识点 03:29:09 Go可用性(六) 熔断 03:29:09 10. 总结 03:29:09 9. kubebuilder 进阶: 源码分析 03:29:09 8. kubebuilder 进阶: webhook 03:29:09 7. kubebuilder 进阶: 测试 03:29:09 6. kubebuilder 实战: status &amp; event 03:29:09 5. kubebuilder 实战: CRUD 03:29:09 4. kustomize 简明教程 03:29:09 3. KubeBuilder 简明教程 03:29:09 2. Kind: 如何快速搭建本地 K8s 开发环境？ 03:29:09 1. Operator概述: 如何对 Kubernetes 进行扩展 03:29:09 Go可用性(五) 自适应限流 03:29:09 Go可用性(四) 漏桶算法 03:29:09 Go可用性(三) 令牌桶的实现 rate/limt 03:29:09 Go可用性(二) 令牌桶原理及使用 03:29:09 Go可用性(一) 隔离设计 03:29:09 Go并发编程(十二) Singleflight 03:29:09 Go工程化(九) 项目重构实践 03:29:09 Go工程化(八) 单元测试 03:29:09 Go工程化(七) Go Module 03:29:09 Go工程化(六) 配置管理 03:29:09 Go工程化(五) API 设计下: 基于 protobuf 自动生成 gin 代码 03:29:09 Go工程化(四) API 设计上: 项目结构 &amp; 设计 03:29:09 Go工程化(三) 依赖注入框架 wire 03:29:09 Go工程化(二) 项目目录结构 03:29:09 Go工程化(一) 架构整洁之道阅读笔记 03:29:09 Go并发编程(十一) 总结 03:29:09 Go并发编程(十) 深入理解 Channel 03:29:09 Go并发编程(九) 深入理解 Context 03:29:09 Go并发编程(八) 深入理解 sync.Once 03:29:09 Go并发编程(七) 深入理解 errgroup 03:29:09 Go并发编程(六) 深入理解 WaitGroup 03:29:09 Go并发编程(五) 深入理解 sync/atomic 03:29:09 Go并发编程(四) 深入理解 Mutex 03:29:09 Go并发编程(三) data race 03:29:09 Go并发编程(二) Go 内存模型 03:29:09 Go并发编程(一) goroutine 03:29:09 Go错误处理最佳实践 03:29:09 微服务(二) 服务发现&amp;多租户 03:29:09 微服务(一) 微服务概览 03:29:09 5. 栈下: 深入理解 defer 03:29:09 4. 栈上: 如何实现一个计算器 03:29:09 Go Struct 初始化风格的抉择 03:29:09 3. 数组下: 使用 GDB 调试 Golang 代码 03:29:09 2. 数组上: 深入理解 slice 03:29:09 1. 链表: 深入理解container/list&amp;LRU缓存的实现 03:29:09 Go设计模式24-总结(更新完毕) 03:29:09 Go设计模式23-中介模式 03:29:09 Go设计模式22-解释器模式 03:29:09 Go设计模式21-命令模式 03:29:09 Go设计模式20-备忘录模式 03:29:09 Go设计模式19-访问者模式 03:29:09 Go设计模式18-迭代器模式 03:29:09 Go设计模式17-状态模式 03:29:09 Go设计模式16-职责链模式(Gin的中间件实现) 03:29:09 Go设计模式15-策略模式 03:29:09 Go模板模式14-模板模式 03:29:09 Go设计模式13-观察者模式(实现简单的EventBus) 03:29:09 Go设计模式12-享元模式 03:29:09 Go设计模式11-组合模式 03:29:09 Go设计模式10-门面模式 03:29:09 Go设计模式09-适配器模式 03:29:09 Go设计模式08-装饰器模式 03:29:09 Go设计模式07-桥接模式 03:29:09 Go设计模式06-代理模式(generate实现类似动态代理) 03:29:09 Go设计模式05-创建型模式总结 03:29:09 Go设计模式04-原型模式 03:29:09 Go设计模式03-建造者模式 03:29:09 Go设计模式02-工厂模式&amp;DI容器 03:29:09 笔记-让你最快速地改善代码质量的20条编程规范 03:29:09 Go设计模式01-单例模式 03:29:09 一点拙见-如何写好一个技术预研报告? 03:29:09 Go Web小技巧（四）在单个仓库中支持多个 go mod 模块 03:29:09 Go Web 小技巧（三）Gin 参数绑定 03:29:09 Go Web 小技巧（二）GORM 使用自定义类型 03:29:09 Go Web 小技巧（一）简化Gin接口代码 03:29:09 善用工具之postman高级用法概述 03:29:09 go generate and ast 03:29:09 hexo-next-algolia-search全文搜索 03:29:09 docker镜像瘦身&amp;优化 03:29:09 GORM避坑指南之含关联关系的更新 03:29:09 Github Actions介绍&amp;自动构建Github Pages博客 03:29:09 在blog中内嵌在线PPT 03:29:09 记一次net http内存泄漏 03:29:09 使用TravisCI自动部署Blog 03:29:09 使用Goland调试Go程序 03:29:09 一个十分边缘的gorm的bug 03:29:09 Httprouter介绍及源码阅读 03:29:09 Gin源码阅读 从0.1开始 03:29:09","head":[["meta",{"property":"og:url","content":"https://www.cizai.io/%E6%AF%8F%E6%97%A5%E6%82%A6%E8%AF%BB/2024-01-30.html"}],["meta",{"property":"og:site_name","content":"此在笔记"}],["meta",{"property":"og:title","content":"2024-01-30"}],["meta",{"property":"og:description","content":"2024-01-30 鸟窝 从慢速到SIMD: 一个Go优化的故事 01:24:20 Mohuishou'sBlog 如何实现支持多集群的 Kubernetes Operator? 03:29:09 第三方应用如何调用我们 kubebuilder 生成的自定义资源? 03:29:09 Kubernetes 简明教程 03:29:09 k8s job 为何迟迟不能结束？ 03:29:09 Go 工程化(十一) 如何优雅的写出 repo 层代码 03:29:09 Go 工程化(十) 如何在整洁架构中使用事务? 03:29:09 给博客添加章节目录 03:29:09 使用 Notion Database 管理静态博客文章 03:29:09 一个普通 Go 开发的三年 03:29:09 4. localhost 就一定是 localhost 么? 03:29:09 Go可用性(七) 总结: 一张图串联可用性知识点 03:29:09 Go可用性(六) 熔断 03:29:09 10. 总结 03:29:09 9. kubebuilder 进阶: 源码分析 03:29:09 8. kubebuilder 进阶: webhook 03:29:09 7. kubebuilder 进阶: 测试 03:29:09 6. kubebuilder 实战: status &amp; event 03:29:09 5. kubebuilder 实战: CRUD 03:29:09 4. kustomize 简明教程 03:29:09 3. KubeBuilder 简明教程 03:29:09 2. Kind: 如何快速搭建本地 K8s 开发环境？ 03:29:09 1. Operator概述: 如何对 Kubernetes 进行扩展 03:29:09 Go可用性(五) 自适应限流 03:29:09 Go可用性(四) 漏桶算法 03:29:09 Go可用性(三) 令牌桶的实现 rate/limt 03:29:09 Go可用性(二) 令牌桶原理及使用 03:29:09 Go可用性(一) 隔离设计 03:29:09 Go并发编程(十二) Singleflight 03:29:09 Go工程化(九) 项目重构实践 03:29:09 Go工程化(八) 单元测试 03:29:09 Go工程化(七) Go Module 03:29:09 Go工程化(六) 配置管理 03:29:09 Go工程化(五) API 设计下: 基于 protobuf 自动生成 gin 代码 03:29:09 Go工程化(四) API 设计上: 项目结构 &amp; 设计 03:29:09 Go工程化(三) 依赖注入框架 wire 03:29:09 Go工程化(二) 项目目录结构 03:29:09 Go工程化(一) 架构整洁之道阅读笔记 03:29:09 Go并发编程(十一) 总结 03:29:09 Go并发编程(十) 深入理解 Channel 03:29:09 Go并发编程(九) 深入理解 Context 03:29:09 Go并发编程(八) 深入理解 sync.Once 03:29:09 Go并发编程(七) 深入理解 errgroup 03:29:09 Go并发编程(六) 深入理解 WaitGroup 03:29:09 Go并发编程(五) 深入理解 sync/atomic 03:29:09 Go并发编程(四) 深入理解 Mutex 03:29:09 Go并发编程(三) data race 03:29:09 Go并发编程(二) Go 内存模型 03:29:09 Go并发编程(一) goroutine 03:29:09 Go错误处理最佳实践 03:29:09 微服务(二) 服务发现&amp;多租户 03:29:09 微服务(一) 微服务概览 03:29:09 5. 栈下: 深入理解 defer 03:29:09 4. 栈上: 如何实现一个计算器 03:29:09 Go Struct 初始化风格的抉择 03:29:09 3. 数组下: 使用 GDB 调试 Golang 代码 03:29:09 2. 数组上: 深入理解 slice 03:29:09 1. 链表: 深入理解container/list&amp;LRU缓存的实现 03:29:09 Go设计模式24-总结(更新完毕) 03:29:09 Go设计模式23-中介模式 03:29:09 Go设计模式22-解释器模式 03:29:09 Go设计模式21-命令模式 03:29:09 Go设计模式20-备忘录模式 03:29:09 Go设计模式19-访问者模式 03:29:09 Go设计模式18-迭代器模式 03:29:09 Go设计模式17-状态模式 03:29:09 Go设计模式16-职责链模式(Gin的中间件实现) 03:29:09 Go设计模式15-策略模式 03:29:09 Go模板模式14-模板模式 03:29:09 Go设计模式13-观察者模式(实现简单的EventBus) 03:29:09 Go设计模式12-享元模式 03:29:09 Go设计模式11-组合模式 03:29:09 Go设计模式10-门面模式 03:29:09 Go设计模式09-适配器模式 03:29:09 Go设计模式08-装饰器模式 03:29:09 Go设计模式07-桥接模式 03:29:09 Go设计模式06-代理模式(generate实现类似动态代理) 03:29:09 Go设计模式05-创建型模式总结 03:29:09 Go设计模式04-原型模式 03:29:09 Go设计模式03-建造者模式 03:29:09 Go设计模式02-工厂模式&amp;DI容器 03:29:09 笔记-让你最快速地改善代码质量的20条编程规范 03:29:09 Go设计模式01-单例模式 03:29:09 一点拙见-如何写好一个技术预研报告? 03:29:09 Go Web小技巧（四）在单个仓库中支持多个 go mod 模块 03:29:09 Go Web 小技巧（三）Gin 参数绑定 03:29:09 Go Web 小技巧（二）GORM 使用自定义类型 03:29:09 Go Web 小技巧（一）简化Gin接口代码 03:29:09 善用工具之postman高级用法概述 03:29:09 go generate and ast 03:29:09 hexo-next-algolia-search全文搜索 03:29:09 docker镜像瘦身&amp;优化 03:29:09 GORM避坑指南之含关联关系的更新 03:29:09 Github Actions介绍&amp;自动构建Github Pages博客 03:29:09 在blog中内嵌在线PPT 03:29:09 记一次net http内存泄漏 03:29:09 使用TravisCI自动部署Blog 03:29:09 使用Goland调试Go程序 03:29:09 一个十分边缘的gorm的bug 03:29:09 Httprouter介绍及源码阅读 03:29:09 Gin源码阅读 从0.1开始 03:29:09"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-30T15:10:54.000Z"}],["meta",{"property":"article:author","content":"cizai"}],["meta",{"property":"article:published_time","content":"2024-01-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-30T15:10:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"2024-01-30\\",\\"description\\":\\"2024-01-30 鸟窝 从慢速到SIMD: 一个Go优化的故事 01:24:20 Mohuishou'sBlog 如何实现支持多集群的 Kubernetes Operator? 03:29:09 第三方应用如何调用我们 kubebuilder 生成的自定义资源? 03:29:09 Kubernetes 简明教程 03:29:09 k8s job 为何迟迟不能结束？ 03:29:09 Go 工程化(十一) 如何优雅的写出 repo 层代码 03:29:09 Go 工程化(十) 如何在整洁架构中使用事务? 03:29:09 给博客添加章节目录 03:29:09 使用 Notion Database 管理静态博客文章 03:29:09 一个普通 Go 开发的三年 03:29:09 4. localhost 就一定是 localhost 么? 03:29:09 Go可用性(七) 总结: 一张图串联可用性知识点 03:29:09 Go可用性(六) 熔断 03:29:09 10. 总结 03:29:09 9. kubebuilder 进阶: 源码分析 03:29:09 8. kubebuilder 进阶: webhook 03:29:09 7. kubebuilder 进阶: 测试 03:29:09 6. kubebuilder 实战: status &amp; event 03:29:09 5. kubebuilder 实战: CRUD 03:29:09 4. kustomize 简明教程 03:29:09 3. KubeBuilder 简明教程 03:29:09 2. Kind: 如何快速搭建本地 K8s 开发环境？ 03:29:09 1. Operator概述: 如何对 Kubernetes 进行扩展 03:29:09 Go可用性(五) 自适应限流 03:29:09 Go可用性(四) 漏桶算法 03:29:09 Go可用性(三) 令牌桶的实现 rate/limt 03:29:09 Go可用性(二) 令牌桶原理及使用 03:29:09 Go可用性(一) 隔离设计 03:29:09 Go并发编程(十二) Singleflight 03:29:09 Go工程化(九) 项目重构实践 03:29:09 Go工程化(八) 单元测试 03:29:09 Go工程化(七) Go Module 03:29:09 Go工程化(六) 配置管理 03:29:09 Go工程化(五) API 设计下: 基于 protobuf 自动生成 gin 代码 03:29:09 Go工程化(四) API 设计上: 项目结构 &amp; 设计 03:29:09 Go工程化(三) 依赖注入框架 wire 03:29:09 Go工程化(二) 项目目录结构 03:29:09 Go工程化(一) 架构整洁之道阅读笔记 03:29:09 Go并发编程(十一) 总结 03:29:09 Go并发编程(十) 深入理解 Channel 03:29:09 Go并发编程(九) 深入理解 Context 03:29:09 Go并发编程(八) 深入理解 sync.Once 03:29:09 Go并发编程(七) 深入理解 errgroup 03:29:09 Go并发编程(六) 深入理解 WaitGroup 03:29:09 Go并发编程(五) 深入理解 sync/atomic 03:29:09 Go并发编程(四) 深入理解 Mutex 03:29:09 Go并发编程(三) data race 03:29:09 Go并发编程(二) Go 内存模型 03:29:09 Go并发编程(一) goroutine 03:29:09 Go错误处理最佳实践 03:29:09 微服务(二) 服务发现&amp;多租户 03:29:09 微服务(一) 微服务概览 03:29:09 5. 栈下: 深入理解 defer 03:29:09 4. 栈上: 如何实现一个计算器 03:29:09 Go Struct 初始化风格的抉择 03:29:09 3. 数组下: 使用 GDB 调试 Golang 代码 03:29:09 2. 数组上: 深入理解 slice 03:29:09 1. 链表: 深入理解container/list&amp;LRU缓存的实现 03:29:09 Go设计模式24-总结(更新完毕) 03:29:09 Go设计模式23-中介模式 03:29:09 Go设计模式22-解释器模式 03:29:09 Go设计模式21-命令模式 03:29:09 Go设计模式20-备忘录模式 03:29:09 Go设计模式19-访问者模式 03:29:09 Go设计模式18-迭代器模式 03:29:09 Go设计模式17-状态模式 03:29:09 Go设计模式16-职责链模式(Gin的中间件实现) 03:29:09 Go设计模式15-策略模式 03:29:09 Go模板模式14-模板模式 03:29:09 Go设计模式13-观察者模式(实现简单的EventBus) 03:29:09 Go设计模式12-享元模式 03:29:09 Go设计模式11-组合模式 03:29:09 Go设计模式10-门面模式 03:29:09 Go设计模式09-适配器模式 03:29:09 Go设计模式08-装饰器模式 03:29:09 Go设计模式07-桥接模式 03:29:09 Go设计模式06-代理模式(generate实现类似动态代理) 03:29:09 Go设计模式05-创建型模式总结 03:29:09 Go设计模式04-原型模式 03:29:09 Go设计模式03-建造者模式 03:29:09 Go设计模式02-工厂模式&amp;DI容器 03:29:09 笔记-让你最快速地改善代码质量的20条编程规范 03:29:09 Go设计模式01-单例模式 03:29:09 一点拙见-如何写好一个技术预研报告? 03:29:09 Go Web小技巧（四）在单个仓库中支持多个 go mod 模块 03:29:09 Go Web 小技巧（三）Gin 参数绑定 03:29:09 Go Web 小技巧（二）GORM 使用自定义类型 03:29:09 Go Web 小技巧（一）简化Gin接口代码 03:29:09 善用工具之postman高级用法概述 03:29:09 go generate and ast 03:29:09 hexo-next-algolia-search全文搜索 03:29:09 docker镜像瘦身&amp;优化 03:29:09 GORM避坑指南之含关联关系的更新 03:29:09 Github Actions介绍&amp;自动构建Github Pages博客 03:29:09 在blog中内嵌在线PPT 03:29:09 记一次net http内存泄漏 03:29:09 使用TravisCI自动部署Blog 03:29:09 使用Goland调试Go程序 03:29:09 一个十分边缘的gorm的bug 03:29:09 Httprouter介绍及源码阅读 03:29:09 Gin源码阅读 从0.1开始 03:29:09\\"}"]]},"headers":[{"level":2,"title":"鸟窝","slug":"鸟窝","link":"#鸟窝","children":[]},{"level":2,"title":"Mohuishou'sBlog","slug":"mohuishou-sblog","link":"#mohuishou-sblog","children":[]},{"level":2,"title":"LenixBlog","slug":"lenixblog","link":"#lenixblog","children":[]},{"level":2,"title":"卢昌海的个人主页","slug":"卢昌海的个人主页","link":"#卢昌海的个人主页","children":[]},{"level":2,"title":"静かな森","slug":"静かな森","link":"#静かな森","children":[]},{"level":2,"title":"安志合的学习博客","slug":"安志合的学习博客","link":"#安志合的学习博客","children":[]},{"level":2,"title":"251","slug":"_251","link":"#_251","children":[]},{"level":2,"title":"LeiMao'sLogBook","slug":"leimao-slogbook","link":"#leimao-slogbook","children":[]},{"level":2,"title":"一派胡言","slug":"一派胡言","link":"#一派胡言","children":[]},{"level":2,"title":"勇敢一点","slug":"勇敢一点","link":"#勇敢一点","children":[]},{"level":2,"title":"Mathor'sBlog","slug":"mathor-sblog","link":"#mathor-sblog","children":[]},{"level":2,"title":"xxxx的个人博客","slug":"xxxx的个人博客","link":"#xxxx的个人博客","children":[]},{"level":2,"title":"Fernweh","slug":"fernweh","link":"#fernweh","children":[]},{"level":2,"title":"obaby@mars","slug":"obaby-mars","link":"#obaby-mars","children":[]},{"level":2,"title":"HikariLan'sBlog","slug":"hikarilan-sblog","link":"#hikarilan-sblog","children":[]},{"level":2,"title":"少数派","slug":"少数派","link":"#少数派","children":[]},{"level":2,"title":"Rust.cc","slug":"rust-cc","link":"#rust-cc","children":[]},{"level":2,"title":"InfoQ - 促进软件开发领域知识与创新的传播","slug":"infoq-促进软件开发领域知识与创新的传播","link":"#infoq-促进软件开发领域知识与创新的传播","children":[]}],"git":{"createdTime":1706544656000,"updatedTime":1706627454000,"contributors":[{"name":"lijc210","email":"lijc210@163.com","commits":16}]},"readingTime":{"minutes":9.47,"words":2840},"filePathRelative":"每日悦读/2024-01-30.md","localizedDate":"2024年1月30日","excerpt":"<h1> 2024-01-30</h1>\\n<h2> 鸟窝<span></span></h2>\\n<ul>\\n<li><a href=\\"https://colobu.com/2024/01/28/slow-to-simd/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">从慢速到SIMD: 一个Go优化的故事</a> <em>01:24:20</em></li>\\n</ul>\\n<h2> Mohuishou'sBlog<span></span></h2>\\n<ul>\\n<li><a href=\\"https://lailin.xyz/post/multi-cluster-operator.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">如何实现支持多集群的 Kubernetes Operator?</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/operator-kubebuilder-clientset.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">第三方应用如何调用我们 kubebuilder 生成的自定义资源?</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/k8s-tutorials.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Kubernetes 简明教程</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/kubernetes-job-running-not-end.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">k8s job 为何迟迟不能结束？</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/graceful-repo-code.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go 工程化(十一) 如何优雅的写出 repo  层代码</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/clean-arch-transaction.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go 工程化(十) 如何在整洁架构中使用事务?</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/add-catefories-sidebar-in-blog.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">给博客添加章节目录</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/notion-markdown-blog.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">使用 Notion Database 管理静态博客文章</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/3-years-summary.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">一个普通 Go 开发的三年</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/localhost.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. localhost 就一定是 localhost 么?</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week6-7-summary.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go可用性(七) 总结: 一张图串联可用性知识点</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week6-6-breaker.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go可用性(六) 熔断</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/operator-11-summary.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">10. 总结</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/operator-09-kubebuilder-code.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">9. kubebuilder 进阶: 源码分析</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/operator-08-kubebuilder-webhook.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">8. kubebuilder 进阶: webhook</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/operator-07-kubebuilder-test.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">7. kubebuilder 进阶: 测试</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/operator-06-kubebuilder-status-and-event.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6. kubebuilder 实战: status &amp; event</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/operator-05-kubebuilder-crud.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. kubebuilder 实战: CRUD</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/operator-04-kustomize-tutorial.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. kustomize 简明教程</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/operator-03-kubebuilder-tutorial.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. KubeBuilder 简明教程</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/operator-02-use-kind-create-k8s-local-cluster.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. Kind: 如何快速搭建本地 K8s 开发环境？</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/operator-01-overview.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. Operator概述: 如何对 Kubernetes 进行扩展</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week6-4-auto-limiter.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go可用性(五) 自适应限流</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week6-4-leaky-bucket.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go可用性(四) 漏桶算法</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week6-3-token-bucket-2.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go可用性(三) 令牌桶的实现 rate/limt</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week6-2-token-bucket-1.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go可用性(二) 令牌桶原理及使用</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week6-usability-1-bulkhe.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go可用性(一) 隔离设计</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week5-singleflight.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go并发编程(十二) Singleflight</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week4-practice.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go工程化(九) 项目重构实践</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week4-unit-test.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go工程化(八) 单元测试</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week4-go-module.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go工程化(七) Go Module</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week4-config.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go工程化(六) 配置管理</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week4-protoc-gen-go-gin.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go工程化(五) API 设计下: 基于 protobuf 自动生成 gin 代码</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week4-api-design.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go工程化(四) API 设计上: 项目结构 &amp; 设计</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week4-wire.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go工程化(三) 依赖注入框架 wire</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week4-project-layout.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go工程化(二) 项目目录结构</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week4-clean-arch.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go工程化(一) 架构整洁之道阅读笔记</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week3-sum.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go并发编程(十一) 总结</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week3-channel.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go并发编程(十) 深入理解 Channel</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week3-context.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go并发编程(九) 深入理解 Context</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week3-once.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go并发编程(八) 深入理解 sync.Once</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week3-errgroup.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go并发编程(七) 深入理解 errgroup</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week3-waitgroup.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go并发编程(六) 深入理解 WaitGroup</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week3-atomic.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go并发编程(五) 深入理解 sync/atomic</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week3-sync.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go并发编程(四) 深入理解 Mutex</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week3-data-race.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go并发编程(三) data race</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week3-go-memory-model.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go并发编程(二) Go 内存模型</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-week3-goroutine.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go并发编程(一) goroutine</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-03.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go错误处理最佳实践</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-02.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">微服务(二) 服务发现&amp;多租户</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-training-01.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">微服务(一) 微服务概览</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/defer.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">5. 栈下: 深入理解 defer</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/stack.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4. 栈上: 如何实现一个计算器</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-new-struct-style-select.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go Struct 初始化风格的抉择</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/array_2.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">3. 数组下: 使用 GDB 调试 Golang 代码</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/array.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2. 数组上: 深入理解 slice</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/list.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">1. 链表: 深入理解container/list&amp;LRU缓存的实现</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-design-pattern.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式24-总结(更新完毕)</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/mediator.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式23-中介模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/interpreter.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式22-解释器模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/command.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式21-命令模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/memento.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式20-备忘录模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/visitor.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式19-访问者模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/iterator.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式18-迭代器模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/state.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式17-状态模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/chain.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式16-职责链模式(Gin的中间件实现)</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/strategy.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式15-策略模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/template.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go模板模式14-模板模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/observer.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式13-观察者模式(实现简单的EventBus)</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/flyweight.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式12-享元模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/composite.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式11-组合模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/facade.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式10-门面模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/adapter.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式09-适配器模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/decorator.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式08-装饰器模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/bridge.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式07-桥接模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/proxy.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式06-代理模式(generate实现类似动态代理)</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/go-design-pattern-create.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式05-创建型模式总结</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/prototype.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式04-原型模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/builder.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式03-建造者模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/factory.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式02-工厂模式&amp;DI容器</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/fe1ma9.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">笔记-让你最快速地改善代码质量的20条编程规范</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/singleton.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go设计模式01-单例模式</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/how-to-write-a-pre-research-report.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">一点拙见-如何写好一个技术预研报告?</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/auxvv1.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go Web小技巧（四）在单个仓库中支持多个 go mod 模块</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/11996.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go Web 小技巧（三）Gin 参数绑定</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/17394.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go Web 小技巧（二）GORM 使用自定义类型</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/38237.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Go Web 小技巧（一）简化Gin接口代码</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/45050.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">善用工具之postman高级用法概述</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/41140.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">go generate and ast</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/27142.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">hexo-next-algolia-search全文搜索</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/51252.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">docker镜像瘦身&amp;优化</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/60163.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">GORM避坑指南之含关联关系的更新</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/28054.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Github Actions介绍&amp;自动构建Github Pages博客</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/7944.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">在blog中内嵌在线PPT</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/44107.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">记一次net http内存泄漏</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/52061.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">使用TravisCI自动部署Blog</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/37623.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">使用Goland调试Go程序</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/37449.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">一个十分边缘的gorm的bug</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/44029.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Httprouter介绍及源码阅读</a> <em>03:29:09</em></li>\\n<li><a href=\\"https://lailin.xyz/post/12338.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Gin源码阅读 从0.1开始</a> <em>03:29:09</em></li>\\n</ul>","autoDesc":true}`);export{e as data};

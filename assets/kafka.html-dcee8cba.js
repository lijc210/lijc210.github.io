import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e as t}from"./app-aa6f0c08.js";const i={},n=t(`<h1 id="kafka" tabindex="-1"><a class="header-anchor" href="#kafka" aria-hidden="true">#</a> kafka</h1><h2 id="kafka-connet-sql-server从指定位置修" tabindex="-1"><a class="header-anchor" href="#kafka-connet-sql-server从指定位置修" aria-hidden="true">#</a> kafka connet sql server从指定位置修</h2><h3 id="发送一条数据到connect-offsets" tabindex="-1"><a class="header-anchor" href="#发送一条数据到connect-offsets" aria-hidden="true">#</a> 发送一条数据到connect-offsets</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>key：
[&quot;sqlserver-cdc-source-AIS20201114225525&quot;,{&quot;server&quot;:&quot;AIS20201114225525&quot;}]
value：
{&quot;transaction_id&quot;:null,&quot;event_serial_no&quot;:2,&quot;commit_lsn&quot;:&quot;000F9F22:00001660:0003&quot;,&quot;change_lsn&quot;:&quot;000F9F22:00001220:0003&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="重启相关connector无用-要重启指定任务" tabindex="-1"><a class="header-anchor" href="#重启相关connector无用-要重启指定任务" aria-hidden="true">#</a> 重启相关connector无用，要重启指定任务</h3><ul><li>/connectors/sqlserver-cdc-source-AIS20201114225525/tasks</li><li>/connectors/sqlserver-cdc-source-AIS20201114225525/tasks/0/restart</li></ul><h2 id="kafka常用命令" tabindex="-1"><a class="header-anchor" href="#kafka常用命令" aria-hidden="true">#</a> kafka常用命令</h2><p>1、启动kafka服务</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bin/kafka-server-start.sh config/server.properties &amp;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、停止kafka服务</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./kafka-server-stop.sh 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3、查看所有的话题</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./kafka-topics.sh --list --zookeeper localhost:9092
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4、查看所有话题的详细信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./kafka-topics.sh --zookeeper localhost:2181 --describe
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>5、列出指定话题的详细信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./kafka-topics.sh --zookeeper localhost:2181 --describe  --topic demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>6、删除一个话题</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./kafka-topics.sh --zookeeper localhost:2181 --delete  --topic test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>7、创建一个叫test的话题，有两个分区，每个分区3个副本</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./kafka-topics.sh --zookeeper localhost:2181 --create --topic test --replication-factor 3 --partitions 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>8、测试kafka发送和接收消息（启动两个终端）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#发送消息（注意端口号为配置文件里面的端口号）
./kafka-console-producer.sh --broker-list localhost:9092 --topic test
#消费消息（可能端口号与配置文件保持一致，或与发送端口保持一致）
./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --from-beginning   #加了--from-beginning 重头消费所有的消息./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test         #不加--from-beginning 从最新的一条消息开始消费
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>9、查看某个topic对应的消息数量</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./kafka-run-class.sh  kafka.tools.GetOffsetShell --broker-list localhost:9092 --topic test --time -1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>10、显示所有消费者</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./kafka-consumer-groups.sh --bootstrap-server localhost:9092 --list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>11、获取正在消费的topic（console-consumer-63307）的group的offset</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./kafka-consumer-groups.sh --describe --group console-consumer-63307 --bootstrap-server localhost:9092
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>11、显示消费者</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./kafka-consumer-groups.sh --bootstrap-server localhost:9092 --list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,31),r=[n];function d(l,o){return a(),s("div",null,r)}const v=e(i,[["render",d],["__file","kafka.html.vue"]]);export{v as default};

const e=JSON.parse('{"key":"v-0735c741","path":"/%E6%AF%8F%E6%97%A5%E6%82%A6%E8%AF%BB/%E8%AE%A2%E9%98%85%E8%AF%B4%E6%98%8E.html","title":"订阅说明","lang":"zh-CN","frontmatter":{"order":-1,"icon":"read","date":"2023-06-15T00:00:00.000Z","category":["每日悦读"],"description":"订阅说明 实现原理 使用ttrss.py启动订阅服务接口，使用rsshub订阅插件，将Tiny Tiny RSS地址改为订阅接口地址，即可直接订阅网站，存入rss.csv。 定时执行write2csv.py，抓取网络上的订阅地址，存入rss.csv。 定时执行write2md.py，读取rss.csv，获取今日新增文章，写入md文档，提交git，自动显示在每日悦读。 参考代码： ttrss.py # coding: utf-8 \\"\\"\\" @File : main.py @Time : 2023/05/05 18:46:35 @Author : lijc210@163.com @Desc : 模拟rsshub订阅插件，将Tiny Tiny RSS订阅到此地址 依赖模块 pip install fastapi,feedparser,uvicorn,requests 订阅请求地址 http://localhost:8000/public.php?op=bookmarklets--subscribe&amp;feed_url=https://rustcc.cn/rss \\"\\"\\" import time import traceback import uvicorn from datetime import datetime, timedelta from typing import Union from fastapi import FastAPI from write2csv import write2csv app = FastAPI() order: str = time.strftime(\\"%Y%m%d\\", time.localtime(time.time())) date: str = time.strftime(\\"%Y-%m-%d\\", time.localtime(time.time())) tomorrow = (datetime.now() + timedelta(days=1)).strftime(\\"%Y-%m-%d\\") @app.get(\\"/\\") def read_root(): return {\\"Hello\\": \\"World\\"} @app.get(\\"/items/{item_id}\\") def read_item(item_id: int, q: Union[str, None] = None): return {\\"item_id\\": item_id, \\"q\\": q} @app.get(\\"/public.php\\") def public(op: str, feed_url: str): try: # print(op) # print(feed_url) success, msg = write2csv(feed_url) except Exception: print(traceback.format_exc()) success, msg = False, traceback.format_exc() return {\\"success\\": success, \\"msg\\": msg} if __name__ == \\"__main__\\": uvicorn.run(app=\\"ttrss:app\\", host=\\"0.0.0.0\\", port=8000, reload=True)","head":[["meta",{"property":"og:url","content":"https://www.cizai.io/%E6%AF%8F%E6%97%A5%E6%82%A6%E8%AF%BB/%E8%AE%A2%E9%98%85%E8%AF%B4%E6%98%8E.html"}],["meta",{"property":"og:site_name","content":"此在笔记"}],["meta",{"property":"og:title","content":"订阅说明"}],["meta",{"property":"og:description","content":"订阅说明 实现原理 使用ttrss.py启动订阅服务接口，使用rsshub订阅插件，将Tiny Tiny RSS地址改为订阅接口地址，即可直接订阅网站，存入rss.csv。 定时执行write2csv.py，抓取网络上的订阅地址，存入rss.csv。 定时执行write2md.py，读取rss.csv，获取今日新增文章，写入md文档，提交git，自动显示在每日悦读。 参考代码： ttrss.py # coding: utf-8 \\"\\"\\" @File : main.py @Time : 2023/05/05 18:46:35 @Author : lijc210@163.com @Desc : 模拟rsshub订阅插件，将Tiny Tiny RSS订阅到此地址 依赖模块 pip install fastapi,feedparser,uvicorn,requests 订阅请求地址 http://localhost:8000/public.php?op=bookmarklets--subscribe&amp;feed_url=https://rustcc.cn/rss \\"\\"\\" import time import traceback import uvicorn from datetime import datetime, timedelta from typing import Union from fastapi import FastAPI from write2csv import write2csv app = FastAPI() order: str = time.strftime(\\"%Y%m%d\\", time.localtime(time.time())) date: str = time.strftime(\\"%Y-%m-%d\\", time.localtime(time.time())) tomorrow = (datetime.now() + timedelta(days=1)).strftime(\\"%Y-%m-%d\\") @app.get(\\"/\\") def read_root(): return {\\"Hello\\": \\"World\\"} @app.get(\\"/items/{item_id}\\") def read_item(item_id: int, q: Union[str, None] = None): return {\\"item_id\\": item_id, \\"q\\": q} @app.get(\\"/public.php\\") def public(op: str, feed_url: str): try: # print(op) # print(feed_url) success, msg = write2csv(feed_url) except Exception: print(traceback.format_exc()) success, msg = False, traceback.format_exc() return {\\"success\\": success, \\"msg\\": msg} if __name__ == \\"__main__\\": uvicorn.run(app=\\"ttrss:app\\", host=\\"0.0.0.0\\", port=8000, reload=True)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-13T03:48:21.000Z"}],["meta",{"property":"article:author","content":"cizai"}],["meta",{"property":"article:published_time","content":"2023-06-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-13T03:48:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"订阅说明\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-15T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-13T03:48:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"cizai\\",\\"url\\":\\"https://www.cizai.io\\"}]}"]]},"headers":[{"level":2,"title":"实现原理","slug":"实现原理","link":"#实现原理","children":[]},{"level":2,"title":"ttrss.py","slug":"ttrss-py","link":"#ttrss-py","children":[]},{"level":2,"title":"write2md.py","slug":"write2md-py","link":"#write2md-py","children":[]},{"level":2,"title":"write2csv.py","slug":"write2csv-py","link":"#write2csv-py","children":[]},{"level":2,"title":"utils.py","slug":"utils-py","link":"#utils-py","children":[]}],"git":{"createdTime":1689220101000,"updatedTime":1689220101000,"contributors":[{"name":"lijc210","email":"lijc210@163.com","commits":1}]},"readingTime":{"minutes":6.59,"words":1976},"filePathRelative":"每日悦读/订阅说明.md","localizedDate":"2023年6月15日","excerpt":"<h1> 订阅说明</h1>\\n<h2> 实现原理</h2>\\n<p>使用ttrss.py启动订阅服务接口，使用rsshub订阅插件，将Tiny Tiny RSS地址改为订阅接口地址，即可直接订阅网站，存入rss.csv。</p>\\n<p>定时执行write2csv.py<span></span>，抓取网络上的订阅地址，存入rss.csv。</p>\\n<p>定时执行write2md.py<span></span>，读取rss.csv，获取今日新增文章，写入md文档，提交git，自动显示在每日悦读。</p>\\n<p>参考代码：</p>\\n<h2> ttrss.py<span></span></h2>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code># coding: utf-8\\n\\"\\"\\"\\n@File    :   main.py\\n@Time    :   2023/05/05 18:46:35\\n@Author  :   lijc210@163.com\\n@Desc    :   模拟rsshub订阅插件，将Tiny Tiny RSS订阅到此地址\\n依赖模块 pip install fastapi,feedparser,uvicorn,requests\\n订阅请求地址 http://localhost:8000/public.php?op=bookmarklets--subscribe&amp;feed_url=https://rustcc.cn/rss\\n\\"\\"\\"\\nimport time\\nimport traceback\\nimport uvicorn\\nfrom datetime import datetime, timedelta\\nfrom typing import Union\\nfrom fastapi import FastAPI\\nfrom write2csv import write2csv\\n\\napp = FastAPI()\\n\\norder: str = time.strftime(\\"%Y%m%d\\", time.localtime(time.time()))\\ndate: str = time.strftime(\\"%Y-%m-%d\\", time.localtime(time.time()))\\ntomorrow = (datetime.now() + timedelta(days=1)).strftime(\\"%Y-%m-%d\\")\\n\\n\\n@app.get(\\"/\\")\\ndef read_root():\\n    return {\\"Hello\\": \\"World\\"}\\n\\n\\n@app.get(\\"/items/{item_id}\\")\\ndef read_item(item_id: int, q: Union[str, None] = None):\\n    return {\\"item_id\\": item_id, \\"q\\": q}\\n\\n\\n@app.get(\\"/public.php\\")\\ndef public(op: str, feed_url: str):\\n    try:\\n        # print(op)\\n        # print(feed_url)\\n        success, msg = write2csv(feed_url)\\n    except Exception:\\n        print(traceback.format_exc())\\n        success, msg = False, traceback.format_exc()\\n    return {\\"success\\": success, \\"msg\\": msg}\\n\\n\\nif __name__ == \\"__main__\\":\\n    uvicorn.run(app=\\"ttrss:app\\", host=\\"0.0.0.0\\", port=8000, reload=True)\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
